plugins {
    id 'com.android.application'
}

android {
    namespace 'org.example.androidservicerunnerapp'
    compileSdk 34

    defaultConfig {
        applicationId "org.example.androidservicerunnerapp"
        minSdk 27
        targetSdk 34
        versionCode 1
        versionName "1.0"

        ndk { abiFilters 'arm64-v8a' }

        // <-- Put your CMake args here so theyâ€™re guaranteed to be passed.
        externalNativeBuild {
            cmake {
                // Use Windows Qt paths
                arguments "-DCMAKE_PREFIX_PATH=C:/Qt/6.5.3/android_arm64_v8a",
                        "-DQt6_DIR=C:/Qt/6.5.3/android_arm64_v8a/lib/cmake/Qt6",
                        "-DQT_HOST_PATH=C:/Qt/6.5.3/msvc2019_64",
                        "-DQt6CoreTools_DIR=C:/Qt/6.5.3/msvc2019_64/lib/cmake/Qt6",
                        "-DCMAKE_FIND_ROOT_PATH=C:/Users/levon/AppData/Local/Android/Sdk/ndk/27.0.12077973;C:/Qt/6.5.3/android_arm64_v8a",
                        "-DQT_ADDITIONAL_PACKAGES_PREFIX_PATH=C:/Qt/6.5.3/android_arm64_v8a",
                        "-DANDROID_STL=c++_shared",
                        "-DQT_DEBUG_FIND_PACKAGE=ON"
            }
        }
    }

    // Keep CMake/NDK versions explicit to avoid toolchain drift
    externalNativeBuild {
        cmake {
            path file('CMakeLists.txt')
            version "3.22.1"
        }
    }
    ndkVersion "27.0.12077973"

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
            jniDebuggable true
        }
    }

    // Updated to Java 11 for better compatibility and to avoid deprecation warnings
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    
    // Suppress Java source/target deprecation warnings
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:-options"
    }

    // Ensure native libraries are properly packaged
    packaging {
        jniLibs {
            pickFirsts += ['**/libc++_shared.so']
        }
    }
    

    

}

dependencies {
    implementation platform("org.jetbrains.kotlin:kotlin-bom:1.9.24")
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.core:core:1.10.1'
}
